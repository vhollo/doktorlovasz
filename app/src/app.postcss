/*Write your global styles here, in PostCSS syntax*/

@tailwind base;

:root {
  /*min-height: 100vh;*/

  --padding-card: 1rem;
  --rounded-btn: 1rem;
  --max-pad: 2rem;
}
/*body {
  height: 100%;
}*/

.nav {
  width: 100%;
  /*height: 200px;*/
  -o-object-fit: cover;
  object-fit: cover;

  display: flex;
  padding: 0 var(--space-1);
  border-bottom: 1px solid #ced2d9;

  z-index: 10;
  /*background: white;*/
  position: fixed;
  left: 0;
  right: 0;
  top: 0;
}

header {
  margin-bottom: 3rem;
}

aside {
  /*margin-block: 3rem;*/
  margin-block: 0;
}
aside + *:not(aside) {
  margin-top: 2.5rem;
}

section {
  margin-inline: auto;
  margin-top: 1.5rem;
  margin-bottom: .5rem;
}

article {
  display: grid;
  /*grid-template-columns: repeat(2, minmax(33ch, 1fr));*/
  grid-template-columns: auto auto;
  /*margin-inline: auto;*/
  /*margin-inline: 0;*/
}
@media only screen and (max-width: 65ch) {
  article {
    display: block;
    /*--max-pad: 2rem;*/
  }
}

article > * {
  /*width: 33ch;*/
  /*margin-inline: auto;*/
  /* max-width: max(100%,29ch); */
  /*padding-inline-start: .67ch;*/
  box-sizing: content-box;
  transition: all 0.25s;
  /* position: relative; */
  display: block;
  border-radius: 0.35rem;
  /*background-color: aliceblue;*/
  box-shadow: var(--shadow) 0 0 0.5rem;
  /*width: 100%;*/
  /*height: 100%;*/
  /*margin-top: 1.75rem;*/
  /*padding-inline-start: 0.67rem;*/
  /*margin-block: 1.25rem;*/
  max-width: 65ch;
  margin-inline-start: calc(var(--max-pad));
}

article > h1,
article > h2 {
  margin-inline-start: 0;
  grid-column-end: span 2;
}
article > h3,
article > h4,
article a {
  grid-column-end: span 2;
  margin-inline-start: calc(var(--max-pad) / 2);
  /*margin-inline-start: auto;*/
}

.prose :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)), .prose :where(ul):not(:where([class~='not-prose'], [class~='not-prose'] *)), .prose :where(li):not(:where([class~='not-prose'], [class~='not-prose'] *))  {
  margin-block: 0;
  line-height: 1.5;
}
.prose p {
  margin-block: 0;
  line-height: 1.5;
}
/*.prose :where(li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
  margin-top: 0;
  margin-bottom: 0;
}*/

/*.prose p, .prose ul, .prose li {
  margin-block: 0;
}*/
.prose > p:not(:empty), .prose > ul:not(:empty), .prose > h4:not(:empty) {
  margin-top: .75rem; /* ez jo */
}
/*.prose > p:nth-of-type(odd) {
  margin-inline-end: auto;
}*/

/*.prose > *:empty {
  margin-top: 0!important;
}*/

.prose ul {
  grid-column-end: span 2;
}

/*img {
  @apply drop-shadow-lg;
}*/
svg {
  display: inline-block;
}

@tailwind components;

.drawer-toggle:checked ~ .drawer-side > .drawer-overlay {
  background-color: transparent;
}

@tailwind utilities;


:root .prose {
  --tw-prose-headings: hsl(var(--c) / 0.8);
  --tw-prose-body: hsl(var(--c) / 0.8);
  --tw-prose-bold: hsl(var(--c) / 0.8);
  --tw-prose-lead: hsl(var(--c));
  --tw-prose-links: hsl(var(--c));
  --tw-prose-counters: hsl(var(--c));
  --tw-prose-bullets: hsl(var(--c) / 0.5);

  --tw-prose-hr: hsl(var(--c) / 0.2);
  --tw-prose-quotes: hsl(var(--c));
  --tw-prose-quote-borders: hsl(var(--c) / 0.2);
  --tw-prose-captions: hsl(var(--c) / 0.5);
  --tw-prose-code: hsl(var(--c));
  --tw-prose-pre-code: hsl(var(--c));
  --tw-prose-pre-bg: hsl(var(--n));
  --tw-prose-th-borders: hsl(var(--c) / 0.5);
  --tw-prose-td-borders: hsl(var(--c) / 0.2);
}

section > .card-body {
  margin-inline: 0!important;
  max-width: none!important;
}